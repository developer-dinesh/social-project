{"ast":null,"code":"/*\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { name: '', email: '', password: '' };\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(initialState);\n  const [password, setPassword] = useState(initialState);\n\n  // const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  \n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const title = {fontFamily: \"'Akaya Telivigala', cursive\", fontSize:\"40px\"};\n\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(name,email,\n        const [name, setName] = useState();password,history);\n    } else {\n      dispatch(signin(email,password,history));\n    }\n  };\n\n  \n\n  // const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        \n        <Typography component=\"h1\" variant=\"h5\" style={title}>{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"name\" label=\"Name\" value={name} onChange={e=>setName(e.target.value)} autoFocus  />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" value={email} onChange={e=>setEmail(e.target.value)} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" value={password} onChange={e=>setPassword(e.target.value)}  type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n           \n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\n            { isSignup ? 'Sign Up'  : 'Sign In' }\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n*/","map":{"version":3,"sources":["/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { name: '', email: '', password: '' };\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(initialState);\n  const [password, setPassword] = useState(initialState);\n\n  // const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  \n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const title = {fontFamily: \"'Akaya Telivigala', cursive\", fontSize:\"40px\"};\n\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(name,email,\n        const [name, setName] = useState();password,history);\n    } else {\n      dispatch(signin(email,password,history));\n    }\n  };\n\n  \n\n  // const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        \n        <Typography component=\"h1\" variant=\"h5\" style={title}>{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"name\" label=\"Name\" value={name} onChange={e=>setName(e.target.value)} autoFocus  />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" value={email} onChange={e=>setEmail(e.target.value)} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" value={password} onChange={e=>setPassword(e.target.value)}  type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n           \n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\n            { isSignup ? 'Sign Up'  : 'Sign In' }\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;\n*/"]},"metadata":{},"sourceType":"module"}