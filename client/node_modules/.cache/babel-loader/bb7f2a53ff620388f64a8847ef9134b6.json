{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPosts = () => dispatch => {\n  return new Promise(function (resolve, reject) {\n    const {\n      data\n    } = api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  }).then;\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/root1/Desktop/Demo-project/client/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPosts","dispatch","Promise","resolve","reject","data","fetchPosts","type","payload","then","createPost","post","error","console","log","updatePost","id","likePost","user","JSON","parse","localStorage","getItem","token","deletePost"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAD,IAAc;AAC1C,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,UAAM;AAAEC,MAAAA;AAAF,QAAWN,GAAG,CAACO,UAAJ,EAAjB;AAEAL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEb,SAAR;AAAmBc,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR;AAEH,GALQ,EAKNI,IALD;AAMD,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEZ,MAAR;AAAgBa,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM;AAUP,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAD,EAAKL,IAAL,KAAc,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACgB,UAAJ,CAAeC,EAAf,EAAmBL,IAAnB,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEX,MAAR;AAAgBY,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM;AAUP,OAAO,MAAMK,QAAQ,GAAID,EAAD,IAAQ,MAAOf,QAAP,IAAoB;AAClD,QAAMiB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;;AAEA,MAAI;AACF,UAAM;AAAEjB,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACkB,QAAJ,CAAaD,EAAb,EAAiBE,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAEK,KAAvB,CAAvB;AAEAtB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,IAAR;AAAcU,MAAAA,OAAO,EAAEH;AAAvB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMY,UAAU,GAAIR,EAAD,IAAQ,MAAOf,QAAP,IAAoB;AACpD,MAAI;AACF,UAAM,MAAMF,GAAG,CAACyB,UAAJ,CAAeR,EAAf,CAAZ;AAEAf,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEV,MAAR;AAAgBW,MAAAA,OAAO,EAAEQ;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOJ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => (dispatch) => {\n  return new Promise(function(resolve, reject) {\n    const { data } = api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  \n}).then\n}\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const { data } = await api.likePost(id, user?.token);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};"]},"metadata":{},"sourceType":"module"}