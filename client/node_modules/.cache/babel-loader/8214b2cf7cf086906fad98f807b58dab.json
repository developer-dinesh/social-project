{"ast":null,"code":"var _jsxFileName = \"/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  email: '',\n  password: ''\n};\n\nconst SignUp = () => {\n  _s();\n\n  const [email, setEmail] = useState(initialState);\n  const [password, setPassword] = useState(initialState);\n  const [name, setName] = useState(initialState); // const [form, setForm] = useState(initialState);\n  // const [isSignup, setIsSignup] = useState(false);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const title = {\n    fontFamily: \"'Akaya Telivigala', cursive\",\n    fontSize: \"40px\"\n  };\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(name, email, password, history));\n    } else {\n      dispatch(signin(email, password, history));\n    }\n  }; // const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        style: title,\n        children: isSignup ? 'Sign up' : 'Sign in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              label: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"M83dtYqPxw0DrQEzCra0tJXqc2s=\", false, function () {\n  return [useDispatch, useHistory, useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Button","Paper","Grid","Typography","Container","useHistory","signin","signup","AUTH","useStyles","Input","initialState","name","email","password","SignUp","setEmail","setPassword","setName","dispatch","history","classes","showPassword","setShowPassword","handleShowPassword","title","fontFamily","fontSize","switchMode","setForm","setIsSignup","prevIsSignup","handleSubmit","e","preventDefault","isSignup","paper","form","target","value","submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { name: '', email: '', password: '' };\n\nconst SignUp = () => {\n  const [email, setEmail] = useState(initialState);\n  const [password, setPassword] = useState(initialState);\n  const [name, setName] = useState(initialState);\n\n  // const [form, setForm] = useState(initialState);\n  // const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  \n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const title = {fontFamily: \"'Akaya Telivigala', cursive\", fontSize:\"40px\"};\n\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(name,email,password,history));\n    } else {\n      dispatch(signin(email,password,history));\n    }\n  };\n\n  \n\n  // const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        \n        <Typography component=\"h1\" variant=\"h5\" style={title}>{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"name\" label=\"Name\" value={name} onChange={e=>setName(e.target.value)} autoFocus  />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" value={email} onChange={e=>setEmail(e.target.value)} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" value={password} onChange={e=>setPassword(e.target.value)}  type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n           \n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\n            { isSignup ? 'Sign Up'  : 'Sign In' }\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}