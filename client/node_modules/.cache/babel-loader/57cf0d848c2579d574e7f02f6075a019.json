{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar intoStream = require('into-stream');\n\nfunction encode(path, callback) {\n  var rs = fs.createReadStream(path, {\n    encoding: 'base64'\n  });\n  var str = '';\n  rs.on('data', function (chuck) {\n    str += chuck;\n  });\n  rs.on('end', function () {\n    callback(null, str);\n  });\n  rs.on('error', function () {\n    callback('encode fail');\n  });\n}\n\nfunction decode(base64String, output, callback) {\n  var bitmap = new Buffer(base64String, 'base64');\n  var rs = intoStream(bitmap);\n  var ws = fs.createWriteStream(output);\n  rs.on('end', function () {\n    callback(null, output);\n  });\n  rs.on('error', function () {\n    callback('decode fail');\n  });\n  rs.pipe(ws);\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};","map":{"version":3,"sources":["/home/root1/Desktop/Demo-project/client/node_modules/file-base64/index.js"],"names":["fs","require","intoStream","encode","path","callback","rs","createReadStream","encoding","str","on","chuck","decode","base64String","output","bitmap","Buffer","ws","createWriteStream","pipe","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AAEA,SAASE,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;AAC9B,MAAIC,EAAE,GAAGN,EAAE,CAACO,gBAAH,CAAoBH,IAApB,EAA0B;AACjCI,IAAAA,QAAQ,EAAE;AADuB,GAA1B,CAAT;AAIA,MAAIC,GAAG,GAAG,EAAV;AACAH,EAAAA,EAAE,CAACI,EAAH,CAAM,MAAN,EAAc,UAASC,KAAT,EAAgB;AAC5BF,IAAAA,GAAG,IAAIE,KAAP;AACD,GAFD;AAIAL,EAAAA,EAAE,CAACI,EAAH,CAAM,KAAN,EAAa,YAAW;AACtBL,IAAAA,QAAQ,CAAC,IAAD,EAAOI,GAAP,CAAR;AACD,GAFD;AAIAH,EAAAA,EAAE,CAACI,EAAH,CAAM,OAAN,EAAe,YAAW;AACxBL,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,GAFD;AAGD;;AAED,SAASO,MAAT,CAAgBC,YAAhB,EAA8BC,MAA9B,EAAsCT,QAAtC,EAAgD;AAC9C,MAAIU,MAAM,GAAG,IAAIC,MAAJ,CAAWH,YAAX,EAAyB,QAAzB,CAAb;AACA,MAAIP,EAAE,GAAGJ,UAAU,CAACa,MAAD,CAAnB;AACA,MAAIE,EAAE,GAAGjB,EAAE,CAACkB,iBAAH,CAAqBJ,MAArB,CAAT;AAEAR,EAAAA,EAAE,CAACI,EAAH,CAAM,KAAN,EAAa,YAAW;AACtBL,IAAAA,QAAQ,CAAC,IAAD,EAAOS,MAAP,CAAR;AACD,GAFD;AAIAR,EAAAA,EAAE,CAACI,EAAH,CAAM,OAAN,EAAe,YAAW;AACxBL,IAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,GAFD;AAIAC,EAAAA,EAAE,CAACa,IAAH,CAAQF,EAAR;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACflB,EAAAA,MAAM,EAAEA,MADO;AAEfS,EAAAA,MAAM,EAAEA;AAFO,CAAjB","sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar intoStream = require('into-stream');\n\nfunction encode(path, callback) {\n  var rs = fs.createReadStream(path, {\n    encoding: 'base64'\n  });\n\n  var str = '';\n  rs.on('data', function(chuck) {\n    str += chuck;\n  });\n\n  rs.on('end', function() {\n    callback(null, str);\n  });\n\n  rs.on('error', function() {\n    callback('encode fail');\n  })\n}\n\nfunction decode(base64String, output, callback) {\n  var bitmap = new Buffer(base64String, 'base64');\n  var rs = intoStream(bitmap)\n  var ws = fs.createWriteStream(output);\n\n  rs.on('end', function() {\n    callback(null, output);\n  });\n\n  rs.on('error', function() {\n    callback('decode fail');\n  });\n\n  rs.pipe(ws);\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n}\n"]},"metadata":{},"sourceType":"script"}