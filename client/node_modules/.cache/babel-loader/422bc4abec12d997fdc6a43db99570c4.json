{"ast":null,"code":"var _jsxFileName = \"/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import {  Button, Paper, Grid, Typography, Container } from '@material-ui/core';\n// import { useHistory } from 'react-router-dom';\n// import { signin, signup } from '../../actions/auth';\n// import { AUTH } from '../../constants/actionTypes';\n// import useStyles from './styles';\n// import Input from './Input';\n// const initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n// const SignUp = () => {\n//   const [form, setForm] = useState(initialState);\n//   const [isSignup, setIsSignup] = useState(false);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const classes = useStyles();\n//   const [showPassword, setShowPassword] = useState(false);\n//   const handleShowPassword = () => setShowPassword(!showPassword);\n//   const switchMode = () => {\n//     setForm(initialState);\n//     setIsSignup((prevIsSignup) => !prevIsSignup);\n//     setShowPassword(false);\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (isSignup) {\n//       dispatch(signup(form, history));\n//     } else {\n//       dispatch(signin(form, history));\n//     }\n//   };\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <Paper className={classes.paper} elevation={3}>\n//         <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n//         <form className={classes.form} onSubmit={handleSubmit}>\n//           <Grid container spacing={2}>\n//             { isSignup && (\n//             <>\n//               <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n//               <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n//             </>\n//             )}\n//             <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n//             <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n//             { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n//           </Grid>\n//           <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n//             { isSignup ? 'Sign Up' : 'Sign In' }\n//           </Button>\n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               <Button onClick={switchMode}>\n//                 { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </form>\n//       </Paper>\n//     </Container>\n//   );\n// };\n// export default SignUp;\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { register } from '../actions/userAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterScreen(props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rePassword, setRePassword] = useState('');\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    userInfo,\n    error\n  } = userRegister;\n  const dispatch = useDispatch();\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n\n    return () => {//\n    };\n  }, [userInfo, props.history, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(register(name, email, password, rePassword));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            name: \"name\",\n            id: \"name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rePassword\",\n            children: \"Re-Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"rePassword\",\n            name: \"rePassword\",\n            onChange: e => setRePassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button primary\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: switchMode,\n          children: isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n}\n\n_s(RegisterScreen, \"QJuCEPmTGfTvuLJgc5ChJOAPou4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js"],"names":["React","useEffect","useState","Link","useSelector","useDispatch","register","RegisterScreen","props","name","setName","email","setEmail","password","setPassword","rePassword","setRePassword","userRegister","state","loading","userInfo","error","dispatch","redirect","location","search","split","history","push","submitHandler","e","preventDefault","target","value","switchMode","isSignup"],"mappings":"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","sourcesContent":["// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import {  Button, Paper, Grid, Typography, Container } from '@material-ui/core';\n// import { useHistory } from 'react-router-dom';\n \n\n \n// import { signin, signup } from '../../actions/auth';\n// import { AUTH } from '../../constants/actionTypes';\n// import useStyles from './styles';\n// import Input from './Input';\n\n// const initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\n// const SignUp = () => {\n//   const [form, setForm] = useState(initialState);\n//   const [isSignup, setIsSignup] = useState(false);\n//   const dispatch = useDispatch();\n//   const history = useHistory();\n//   const classes = useStyles();\n\n//   const [showPassword, setShowPassword] = useState(false);\n//   const handleShowPassword = () => setShowPassword(!showPassword);\n\n//   const switchMode = () => {\n//     setForm(initialState);\n//     setIsSignup((prevIsSignup) => !prevIsSignup);\n//     setShowPassword(false);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     if (isSignup) {\n//       dispatch(signup(form, history));\n//     } else {\n//       dispatch(signin(form, history));\n//     }\n//   };\n\n   \n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <Paper className={classes.paper} elevation={3}>\n        \n//         <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n//         <form className={classes.form} onSubmit={handleSubmit}>\n//           <Grid container spacing={2}>\n//             { isSignup && (\n//             <>\n//               <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n//               <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n//             </>\n//             )}\n//             <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n//             <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n//             { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n//           </Grid>\n//           <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n//             { isSignup ? 'Sign Up' : 'Sign In' }\n//           </Button>\n          \n//           <Grid container justify=\"flex-end\">\n//             <Grid item>\n//               <Button onClick={switchMode}>\n//                 { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n//               </Button>\n//             </Grid>\n//           </Grid>\n//         </form>\n//       </Paper>\n//     </Container>\n//   );\n// };\n\n// export default SignUp;\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { register } from '../actions/userAction';\n\n\nfunction RegisterScreen(props) {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rePassword, setRePassword] = useState('');\n  const userRegister = useSelector(state => state.userRegister);\n  const { loading, userInfo, error } = userRegister;\n  const dispatch = useDispatch();\n\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n    return () => {\n      //\n    };\n  }, [userInfo, props.history,redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(register(name, email, password,rePassword));\n  }\n  return <div className=\"form\">\n    <form onSubmit={submitHandler} >\n      <ul className=\"form-container\">\n        <li>\n          <h2>Create Account</h2>\n        </li>\n        <li>\n          {loading && <div>Loading...</div>}\n          {error && <div>{error}</div>}\n        </li>\n        <li>\n          <label htmlFor=\"name\">\n            Name\n          </label>\n          <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"email\">\n            Email\n          </label>\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"rePassword\">Re-Enter Password</label>\n          <input type=\"password\" id=\"rePassword\" name=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <button type=\"submit\" className=\"button primary\">Register</button>\n        </li>\n        <Button onClick={switchMode}>\n              { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n      </ul>\n    </form>\n  </div>\n}\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}