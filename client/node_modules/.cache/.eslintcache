[{"/home/root1/Desktop/project/client/src/index.js":"1","/home/root1/Desktop/project/client/src/App.js":"2","/home/root1/Desktop/Demo-project/client/src/index.js":"3","/home/root1/Desktop/Demo-project/client/src/App.js":"4","/home/root1/Desktop/Demo-project/client/src/reducers/index.js":"5","/home/root1/Desktop/Demo-project/client/src/styles.js":"6","/home/root1/Desktop/Demo-project/client/src/actions/posts.js":"7","/home/root1/Desktop/Demo-project/client/src/components/Posts/Posts.js":"8","/home/root1/Desktop/Demo-project/client/src/components/Form/Form.js":"9","/home/root1/Desktop/Demo-project/client/src/reducers/posts.js":"10","/home/root1/Desktop/Demo-project/client/src/components/Form/styles.js":"11","/home/root1/Desktop/Demo-project/client/src/components/Posts/styles.js":"12","/home/root1/Desktop/Demo-project/client/src/components/Posts/Post/Post.js":"13","/home/root1/Desktop/Demo-project/client/src/api/index.js":"14","/home/root1/Desktop/Demo-project/client/src/components/Posts/Post/styles.js":"15","/home/root1/Desktop/Demo-project/client/src/constants/actionTypes.js":"16","/home/root1/Desktop/Demo-project/client/src/components/Navbar/Navbar.js":"17","/home/root1/Desktop/Demo-project/client/src/components/Navbar/styles.js":"18","/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js":"19","/home/root1/Desktop/Demo-project/client/src/components/Home/Home.js":"20","/home/root1/Desktop/Demo-project/client/src/components/Auth/Input.js":"21","/home/root1/Desktop/Demo-project/client/src/components/Auth/icon.js":"22","/home/root1/Desktop/Demo-project/client/src/reducers/auth.js":"23","/home/root1/Desktop/Demo-project/client/src/actions/auth.js":"24","/home/root1/Desktop/Demo-project/client/src/components/Auth/styles.js":"25"},{"size":432,"mtime":1617204505439,"results":"26","hashOfConfig":"27"},{"size":1261,"mtime":1617207130194,"results":"28","hashOfConfig":"27"},{"size":465,"mtime":1617617070339,"results":"29","hashOfConfig":"30"},{"size":555,"mtime":1617616985966,"results":"31","hashOfConfig":"30"},{"size":156,"mtime":1617616925861,"results":"32","hashOfConfig":"30"},{"size":350,"mtime":1617535568583,"results":"33","hashOfConfig":"30"},{"size":1246,"mtime":1617704964094,"results":"34","hashOfConfig":"30"},{"size":694,"mtime":1617616721717,"results":"35","hashOfConfig":"30"},{"size":2579,"mtime":1617692058194,"results":"36","hashOfConfig":"30"},{"size":598,"mtime":1617616954885,"results":"37","hashOfConfig":"30"},{"size":425,"mtime":1617616472404,"results":"38","hashOfConfig":"30"},{"size":1339,"mtime":1617616746606,"results":"39","hashOfConfig":"30"},{"size":3013,"mtime":1617616656200,"results":"40","hashOfConfig":"30"},{"size":780,"mtime":1617623566940,"results":"41","hashOfConfig":"30"},{"size":962,"mtime":1617616688137,"results":"42","hashOfConfig":"30"},{"size":222,"mtime":1617616845628,"results":"43","hashOfConfig":"30"},{"size":2144,"mtime":1617695542097,"results":"44","hashOfConfig":"30"},{"size":901,"mtime":1617695584125,"results":"45","hashOfConfig":"30"},{"size":3906,"mtime":1617710440137,"results":"46","hashOfConfig":"30"},{"size":886,"mtime":1617616540390,"results":"47","hashOfConfig":"30"},{"size":906,"mtime":1617615543502,"results":"48","hashOfConfig":"30"},{"size":501,"mtime":1617695900389,"results":"49","hashOfConfig":"30"},{"size":525,"mtime":1617616896644,"results":"50","hashOfConfig":"30"},{"size":558,"mtime":1617712536498,"results":"51","hashOfConfig":"30"},{"size":638,"mtime":1617620003677,"results":"52","hashOfConfig":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"qx80i9",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"va2zq5",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/home/root1/Desktop/project/client/src/index.js",["111"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nimport App from './App';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n",["112","113"],"/home/root1/Desktop/project/client/src/App.js",[],"/home/root1/Desktop/Demo-project/client/src/index.js",[],["114","115"],"/home/root1/Desktop/Demo-project/client/src/App.js",[],"/home/root1/Desktop/Demo-project/client/src/reducers/index.js",[],"/home/root1/Desktop/Demo-project/client/src/styles.js",[],["116","117"],"/home/root1/Desktop/Demo-project/client/src/actions/posts.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Posts/Posts.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Form/Form.js",["118"],"import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n \nimport Posts from '../Posts/Posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '', tags: '', selectedFile: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign in to create and Like Posts.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Create Post'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Discription\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;","/home/root1/Desktop/Demo-project/client/src/reducers/posts.js",["119"],"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};","/home/root1/Desktop/Demo-project/client/src/components/Form/styles.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Posts/styles.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Posts/Post/Post.js",[],"/home/root1/Desktop/Demo-project/client/src/api/index.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Posts/Post/styles.js",[],"/home/root1/Desktop/Demo-project/client/src/constants/actionTypes.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Navbar/Navbar.js",["120"],"import React, { useState, useEffect } from 'react';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\n\nimport memories from '../../images/memories.png';\nimport * as actionType from '../../constants/actionTypes';\nimport useStyles from './styles';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const logout = () => {\n    dispatch({ type: actionType.LOGOUT });\n\n    history.push('/auth');\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user?.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n\n  const title = {fontFamily: \"'Akaya Telivigala', cursive\", fontSize:\"35px\"};\n\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <div className={classes.brandContainer}>\n        <Typography component={Link} to=\"/\" className={classes.heading} variant=\"h2\" style={title} >Okay-Social</Typography>\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\n      </div>\n      <Toolbar className={classes.toolbar}>\n        {user?.result ? (\n          <div className={classes.profile}>\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n          </div>\n        ) : (\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/home/root1/Desktop/Demo-project/client/src/components/Navbar/styles.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Auth/Auth.js",["121","122"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './styles';\nimport Input from './Input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst SignUp = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  \n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const title = {fontFamily: \"'Akaya Telivigala', cursive\", fontSize:\"40px\"};\n\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, history));\n    } else {\n      dispatch(signin(form, history));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Typography component=\"h1\" variant=\"h5\" style={title}>{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            { isSignup && (\n            <>\n              <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n              <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n            </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            { isSignup && <Input name=\"confirmPassword\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\" /> }\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} >\n            { isSignup ? 'Sign Up'  : 'Sign In' }\n          </Button>\n          <GoogleLogin\n            clientId=\"1030473775779-4856ljd490jc6sol4nkbn0e7bjuh6enh.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon />} variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default SignUp;","/home/root1/Desktop/Demo-project/client/src/components/Home/Home.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Auth/Input.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Auth/icon.js",[],"/home/root1/Desktop/Demo-project/client/src/reducers/auth.js",[],"/home/root1/Desktop/Demo-project/client/src/actions/auth.js",[],"/home/root1/Desktop/Demo-project/client/src/components/Auth/styles.js",[],{"ruleId":"123","severity":1,"message":"124","line":11,"column":7,"nodeType":"125","messageId":"126","endLine":11,"endColumn":12},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"135","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":3,"column":1,"nodeType":"138","endLine":18,"endColumn":3},{"ruleId":"139","severity":1,"message":"140","line":36,"column":6,"nodeType":"141","endLine":36,"endColumn":16,"suggestions":"142"},{"ruleId":"123","severity":1,"message":"143","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"144","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":24},"no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],["145"],["146"],"'Posts' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["147"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"150","text":"151"},[1028,1038],"[location, logout, user?.token]"]